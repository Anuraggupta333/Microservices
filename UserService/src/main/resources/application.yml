server:
  port: 8081 # Server port configuration

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices?createDatabaseIfNotExist=true # MySQL database connection URL
    username: root # Database username
    password: 123456 # Database password
    driver-class-name: com.mysql.cj.jdbc.Driver # MySQL JDBC driver class name

  config:
    import: configserver:http://localhost:8086 # External configuration server URL

  security:
    oauth2:
      resourceserver: # Configures the application as an OAuth2 resource server.
        jwt: # Indicates that JWT (JSON Web Tokens) will be used for authentication.
          issuer-uri: https://dev-70578451.okta.com/oauth2/default # The issuer URI from Okta for JWT validation.

      client: # Configures the application as an OAuth2 client.
        registration:
          my-internal-client: # Fixed typo in client name
            provider: okta # Specifies Okta as the identity provider.
            authorization-grant-type: client_credentials # Uses the client credentials grant type.
            scope: internal # Requested scope for access token.
            client-id: 0oam4dc6fcMXJ08XL5d7 # The client ID assigned by Okta.
            client-secret: syHbTEWoFNWLlfPrayYJ4gP3JVvsNAE4BwIlElmlf8XlJY46f6Dw822sIMVwSFgh # The client secret assigned by Okta.

        provider:
          okta:
            issuer-uri: https://dev-70578451.okta.com/oauth2/default # Specifies the issuer URI for Okta.

  jpa:
    hibernate:
      ddl-auto: update # Hibernate will automatically update the database schema.
    show-sql: true # Enable SQL query logging.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect # Hibernate dialect for MySQL 8.

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker: # Circuit breaker configuration for "ratingHotelBreaker".
        registerHealthIndicator: true # Register health indicators for monitoring.
        failureRateThreshold: 50 # Failure rate threshold percentage.
        minimumNumberOfCalls: 5 # Minimum number of calls before circuit breaker activates.
        automaticTransitionFromOpenToHalfOpenEnabled: true # Enable auto-transition to half-open state.
        waitDurationInOpenState: 3s # Wait duration in the open state.
        permittedNumberOfCallsInHalfOpenState: 5 # Allowed calls during the half-open state.
        slidingWindowType: COUNT_BASED # Sliding window type (COUNT_BASED or TIME_BASED).
        slidingWindowSize: 10 # Number of calls in the sliding window.
  retry:
    instances:
      ratingHotelService: # Retry configuration for "ratingHotelService".
        max-attempts: 3 # Corrected property name to "max-attempts".
        wait-duration: 2s # Wait duration between retry attempts.
  ratelimiter:
    instances:
      myRateLimiter: # Rate limiter configuration for "myRateLimiter".
        limitForPeriod: 10 # Number of calls allowed within a time period.
        limitRefreshPeriod: 1s # Time period after which the limit is refreshed.
        timeoutDuration: 500ms # Maximum wait time for permission if the limit is exceeded.

management:
  health:
    circuitbreaker:
      enabled: true # Corrected property name to "enabled".

  endpoints:
    web:
      exposure:
        include: health,info # Expose health and info endpoints.

  endpoint:
    health:
      show-details: always # Always show detailed health information.

okta:
  oauth2:
    issuer: https://dev-70578451.okta.com/oauth2/default # Specifies the Okta issuer URI.
    audience: api://default # Audience for validating access tokens.
